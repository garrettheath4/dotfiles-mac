#!/usr/bin/env bash

if [ "$1" == '--notify' ]; then
	shift
	brew update >/dev/null
	brewOutdated=$(brew outdated)
	caskOutdated=$(brew cask outdated)
	if [ -n "$brewOutdated" ] || [ -n "$caskOutdated" ] || [ "$1" == '--test' ]; then
		# shellcheck disable=SC2016
		osascript -e 'display notification "Updates are available for Homebrew. Run `brewu` when you get a chance." with title "Homebrew"'
		exit 1
	else
		exit 0
	fi
fi

printWithUrlExceptTrusted() {
	# Usage: printWithUrlExceptTrusted <brewOutdatedOutput> <approvedList> <formula|cask>

	# ==> Outdated Packages
	# libomp (9.0.1) < 10.0.0  -  https://formulae.brew.sh/formula/libomp
	# sbt (1.3.8_1) < 1.3.9  -  https://formulae.brew.sh/formula/sbt
	# ==> Outdated Casks (update with `brew cask upgrade`)
	#

	local brewOutdated="$1"
	local approved="$2"
	local urlPath="$3/"

	while IFS= read -r line; do
		if echo "$approved" | grep -wq "$(echo "$line" | cut -f1 -d' ')"; then
			echo "$line"
		else
			echo "$line" | sed -E "s|([^ ]+)(.*)|\1\2  -  https://formulae.brew.sh/$urlPath\1|"
		fi
	done <<< "$brewOutdated"
}


approvedPkgs='bash bash-completion ffmpeg flac freetype git imagemagick jpeg
lame maven maven@3.6.1 mysql node node@10 openjdk openssl openssl@1.1
postgresql@10 python readline reattach-to-user-namespace sbt scala scala@2.12
shellcheck sqlite tmux tomcat wakeonlan watchman wget youtube-dl unbound
harfbuzz backuploupe libde265 libheif balenaetcher blender'

approvedCasks='adoptopenjdk8 alfred anaconda atom backuploupe balenaetcher
bettertouchtool dbeaver-enterprise discord docker firefox gimp goofy insync
iterm2 macdown macvim signal toggl tunnelblick tuple blender'

brew update
echo
echo '==> Outdated Packages'
brewOutdated=$(brew outdated --verbose)
printWithUrlExceptTrusted "$brewOutdated" "$approvedPkgs" 'formula'

# shellcheck disable=SC2016
echo '==> Outdated Casks (update with `brew cask upgrade`)'
caskOutdated=$(brew cask outdated)
printWithUrlExceptTrusted "$caskOutdated" "$approvedCasks" 'cask'

rangBell=no
pleaseUpgradePackages=no
pleaseUpgradeCasks=no

if [ -n "$brewOutdated" ]; then
	if [ "$rangBell" == "no" ]; then
		echo -en '\a'
		rangBell=yes
	fi
	read -p "Some packages are outdated. Upgrade? (Y/n): " -n 1 -r
	if [[ ! $REPLY =~ ^[Nn]$ ]]; then
		pleaseUpgradePackages=yes
	fi
fi

if [ -n "$caskOutdated" ]; then
	if [ "$rangBell" == "no" ]; then
		echo -en '\a'
		rangBell=yes
	fi
	read -p "Some casks are outdated. Upgrade casks? (Y/n): " -n 1 -r
	if [[ ! $REPLY =~ ^[Nn]$ ]]; then
		brew cask upgrade
		pleaseUpgradeCasks=yes
	fi
fi

if [ "$pleaseUpgradePackages" == "yes" ]; then
	brew upgrade
fi

if [ "$pleaseUpgradeCasks" == "yes" ]; then
	brew cask upgrade
fi

